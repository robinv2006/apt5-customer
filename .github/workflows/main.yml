name: Backend Customer

on:
  push:
    branches:
      - master

jobs:
  compile:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 8 ]
    name: Java ${{ matrix.java }} compile
    steps:
      - uses: actions/checkout@master

      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: mvn -f pom.xml clean compile

  build:
    runs-on: ubuntu-latest
    needs: compile
    name: Java 8 build, deliver artifact and container
    steps:
      - uses: actions/checkout@v1

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Setup PostgreSQL
        # You may pin to the exact commit or the version.
        # uses: Harmon758/postgresql-action@0be19fa37850b22cb4c9bbf28a03abbf44abd863
        uses: Harmon758/postgresql-action@v1.0.0
        with:
          # Version of PostgreSQL to use
          # postgresql version: latest # optional, default is latest
          # POSTGRES_DB - name for the default database that is created
          postgresql db: postgres # optional, default is 
          # POSTGRES_USER - create the specified user with superuser power
          postgresql user: ${{ secrets.POSTGRES_USER }} # optional, default is 
          # POSTGRES_PASSWORD - superuser password
          postgresql password:  ${{ secrets.POSTGRES_PASSWORD }} # optional, default is 

      - name: Test and build project
        run: mvn -f pom.xml clean install

      - name: Show contents of the current working directory
        run: ls -la

      - name: Show contents of the target directory
        run: ls -la target

      - name: Upload Maven build artifact
        uses: actions/upload-artifact@v1
        with:
          name: customer-artifact.jar
          path: ./target/customer-0.0.1-SNAPSHOT.jar

      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker Build
        run: docker build -t ${{ secrets.DOCKER_USER }}/customer-service .

      - name: Upload container to Docker Hub with Push
        run: docker push ${{ secrets.DOCKER_USER }}/customer-service
